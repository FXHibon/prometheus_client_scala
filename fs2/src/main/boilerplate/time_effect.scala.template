package io.prometheus.client.scala

import io.prometheus.client.scala.internal.gauge._
import io.prometheus.client.scala.internal.histogram._
import fs2.util.Suspendable
import fs2.util.syntax._

object time_effect {
  import to_fs2_syntax._

  def timeWithGauge[F[_], A, N <: String](effect: F[A], gauge: Gauge0[N])(implicit F: Suspendable[F]): F[A] =
    gauge.timeEffect(effect)

[#
  def timeWithGauge[F[_], A, N <: String, [#L1 <: String#]](effect: F[A], gauge: Gauge1[N, [#L1#]])([#l1: String#])(implicit F: Suspendable[F]): F[A] =
    gauge.timeEffect([#l1#])(effect)
#
]

  def timeWithHistogram[F[_], A, N <: String](effect: F[A], histogram: Histogram0[N])(implicit F: Suspendable[F]): F[A] =
    histogram.timeEffect(effect)

[#
  def timeWithHistogram[F[_], A, N <: String, [#L1 <: String#]](effect: F[A], histogram: Histogram1[N, [#L1#]])([#l1: String#])(implicit F: Suspendable[F]): F[A] =
    histogram.timeEffect([#l1#])(effect)
#
]
}
